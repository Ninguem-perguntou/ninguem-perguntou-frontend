/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PodcastIdImport } from './routes/podcast/$id'
import { Route as NewsIdImport } from './routes/news/$id'
import { Route as authAuthRegisterImport } from './routes/(auth)/auth/register'
import { Route as authAuthLoginImport } from './routes/(auth)/auth/login'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const PodcastIndexLazyImport = createFileRoute('/podcast/')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const PodcastIndexLazyRoute = PodcastIndexLazyImport.update({
  id: '/podcast/',
  path: '/podcast/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/podcast/index.lazy').then((d) => d.Route))

const PodcastIdRoute = PodcastIdImport.update({
  id: '/podcast/$id',
  path: '/podcast/$id',
  getParentRoute: () => rootRoute,
} as any)

const NewsIdRoute = NewsIdImport.update({
  id: '/news/$id',
  path: '/news/$id',
  getParentRoute: () => rootRoute,
} as any)

const authAuthRegisterRoute = authAuthRegisterImport.update({
  id: '/(auth)/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const authAuthLoginRoute = authAuthLoginImport.update({
  id: '/(auth)/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/news/$id': {
      id: '/news/$id'
      path: '/news/$id'
      fullPath: '/news/$id'
      preLoaderRoute: typeof NewsIdImport
      parentRoute: typeof rootRoute
    }
    '/podcast/$id': {
      id: '/podcast/$id'
      path: '/podcast/$id'
      fullPath: '/podcast/$id'
      preLoaderRoute: typeof PodcastIdImport
      parentRoute: typeof rootRoute
    }
    '/podcast/': {
      id: '/podcast/'
      path: '/podcast'
      fullPath: '/podcast'
      preLoaderRoute: typeof PodcastIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/auth/login': {
      id: '/(auth)/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof authAuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/auth/register': {
      id: '/(auth)/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof authAuthRegisterImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/news/$id': typeof NewsIdRoute
  '/podcast/$id': typeof PodcastIdRoute
  '/podcast': typeof PodcastIndexLazyRoute
  '/auth/login': typeof authAuthLoginRoute
  '/auth/register': typeof authAuthRegisterRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/news/$id': typeof NewsIdRoute
  '/podcast/$id': typeof PodcastIdRoute
  '/podcast': typeof PodcastIndexLazyRoute
  '/auth/login': typeof authAuthLoginRoute
  '/auth/register': typeof authAuthRegisterRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/news/$id': typeof NewsIdRoute
  '/podcast/$id': typeof PodcastIdRoute
  '/podcast/': typeof PodcastIndexLazyRoute
  '/(auth)/auth/login': typeof authAuthLoginRoute
  '/(auth)/auth/register': typeof authAuthRegisterRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/news/$id'
    | '/podcast/$id'
    | '/podcast'
    | '/auth/login'
    | '/auth/register'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/news/$id'
    | '/podcast/$id'
    | '/podcast'
    | '/auth/login'
    | '/auth/register'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/news/$id'
    | '/podcast/$id'
    | '/podcast/'
    | '/(auth)/auth/login'
    | '/(auth)/auth/register'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  NewsIdRoute: typeof NewsIdRoute
  PodcastIdRoute: typeof PodcastIdRoute
  PodcastIndexLazyRoute: typeof PodcastIndexLazyRoute
  authAuthLoginRoute: typeof authAuthLoginRoute
  authAuthRegisterRoute: typeof authAuthRegisterRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  NewsIdRoute: NewsIdRoute,
  PodcastIdRoute: PodcastIdRoute,
  PodcastIndexLazyRoute: PodcastIndexLazyRoute,
  authAuthLoginRoute: authAuthLoginRoute,
  authAuthRegisterRoute: authAuthRegisterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/news/$id",
        "/podcast/$id",
        "/podcast/",
        "/(auth)/auth/login",
        "/(auth)/auth/register"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/news/$id": {
      "filePath": "news/$id.tsx"
    },
    "/podcast/$id": {
      "filePath": "podcast/$id.tsx"
    },
    "/podcast/": {
      "filePath": "podcast/index.lazy.tsx"
    },
    "/(auth)/auth/login": {
      "filePath": "(auth)/auth/login.tsx"
    },
    "/(auth)/auth/register": {
      "filePath": "(auth)/auth/register.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
